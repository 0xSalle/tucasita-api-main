name: Run Flask App and Test with ZAP

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-with-zap:
    runs-on: ubuntu-latest

    services:
      flask-app:
        image: python:3.12
        options: >-
          --health-cmd="curl -f http://localhost:5000/ || exit 1"
          --health-interval=5s
          --health-timeout=10s
          --health-retries=3
        ports:
          - 5000:5000

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Install Dependencies
        run: |
          docker build -t flask-app .
          docker run -d -p 5000:5000 --name flask-app flask-app

      # Step 3: Pull ZAP Docker image
      - name: Pull ZAP Docker Image
        run: docker pull zaproxy/zap-weekly

      # Step 4: Wait for Flask App to Start
      - name: Wait for Flask App
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:5000/; then
              echo "Flask app is running"
              break
            fi
            echo "Waiting for Flask app to start..."
            sleep 5
          done

      # Step 5: Run ZAP API Scan
      - name: Run ZAP API Scan
        run: |
          docker run -v $(pwd):/zap/wrk/:rw \
            zaproxy/zap-weekly zap-api-scan.py \
            -t /zap/wrk/openapi.json \
            -c /zap/wrk/api-scan.conf \
            -f openapi

      # Step 6: Stop Flask Container
      - name: Clean Up
        run: |
          docker stop flask-app
          docker rm flask-app
